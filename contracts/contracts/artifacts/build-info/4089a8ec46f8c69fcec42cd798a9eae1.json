{
	"id": "4089a8ec46f8c69fcec42cd798a9eae1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MetaCoin.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    function finalize() external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract MetaCoin is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    // NOTE Start of https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    address private _owner;\n\n    constructor () public {\n        _name = \"orangeCoin\";\n        _symbol = \"ORN\";\n        _decimals = 2;\n        _owner = msg.sender;\n\n        _mint(0x62B9a2F427Ae8649b2467e08095C65551140926d, 100000 * 10 ** 2); // CAUTION!\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n    // NOTE End of https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function finalize() public returns (bool){\n        _finalize();\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n        require(msg.sender == sender, \"ERC20: Caller isn't sender\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n\t_balances[account] = _balances[account].sub(value);\n        _totalSupply = _totalSupply.sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    function _finalize() internal {\n        require(msg.sender == _owner, \"ERC20: Can't destroy caller isn't owner.\");\n        selfdestruct(msg.sender);\n    }\n\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MetaCoin.sol": {
				"IERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "finalize",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"finalize()": "4bb278f3",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"MetaCoin": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "finalize",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.",
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/MetaCoin.sol\":4988:13465  contract MetaCoin is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MetaCoin.sol\":5423:5649  constructor () public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/MetaCoin.sol\":5423:5649  constructor () public {... */\n  pop\n    /* \"contracts/MetaCoin.sol\":5455:5475  _name = \"orangeCoin\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xa\n  dup2\n  mstore\n  0x20\n  add\n  0x6f72616e6765436f696e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MetaCoin.sol\":5455:5460  _name */\n  0x2\n    /* \"contracts/MetaCoin.sol\":5455:5475  _name = \"orangeCoin\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_4\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"contracts/MetaCoin.sol\":5485:5500  _symbol = \"ORN\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x3\n  dup2\n  mstore\n  0x20\n  add\n  0x4f524e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MetaCoin.sol\":5485:5492  _symbol */\n  0x3\n    /* \"contracts/MetaCoin.sol\":5485:5500  _symbol = \"ORN\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_6:\n  pop\n    /* \"contracts/MetaCoin.sol\":5522:5523  2 */\n  0x2\n    /* \"contracts/MetaCoin.sol\":5510:5519  _decimals */\n  0x4\n  0x0\n    /* \"contracts/MetaCoin.sol\":5510:5523  _decimals = 2 */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MetaCoin.sol\":5542:5552  msg.sender */\n  caller\n    /* \"contracts/MetaCoin.sol\":5533:5539  _owner */\n  0x4\n  0x1\n    /* \"contracts/MetaCoin.sol\":5533:5552  _owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MetaCoin.sol\":5563:5630  _mint(0x62B9a2F427Ae8649b2467e08095C65551140926d, 100000 * 10 ** 2) */\n  tag_7\n    /* \"contracts/MetaCoin.sol\":5569:5611  0x62B9a2F427Ae8649b2467e08095C65551140926d */\n  0x62b9a2f427ae8649b2467e08095c65551140926d\n    /* \"contracts/MetaCoin.sol\":5613:5629  100000 * 10 ** 2 */\n  0x989680\n    /* \"contracts/MetaCoin.sol\":5563:5568  _mint */\n  mul(0x100000000, tag_8)\n    /* \"contracts/MetaCoin.sol\":5563:5630  _mint(0x62B9a2F427Ae8649b2467e08095C65551140926d, 100000 * 10 ** 2) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_7:\n    /* \"contracts/MetaCoin.sol\":4988:13465  contract MetaCoin is IERC20 {... */\n  jump(tag_9)\n    /* \"contracts/MetaCoin.sol\":11271:11573  function _mint(address account, uint256 amount) internal {... */\ntag_8:\n    /* \"contracts/MetaCoin.sol\":11365:11366  0 */\n  0x0\n    /* \"contracts/MetaCoin.sol\":11346:11367  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MetaCoin.sol\":11346:11353  account */\n  dup3\n    /* \"contracts/MetaCoin.sol\":11346:11367  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/MetaCoin.sol\":11338:11403  require(account != address(0), \"ERC20: mint to the zero address\") */\n  iszero\n  iszero\n  tag_11\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/MetaCoin.sol\":11429:11453  _totalSupply.add(amount) */\n  tag_12\n    /* \"contracts/MetaCoin.sol\":11446:11452  amount */\n  dup2\n    /* \"contracts/MetaCoin.sol\":11429:11441  _totalSupply */\n  sload(0x5)\n    /* \"contracts/MetaCoin.sol\":11429:11445  _totalSupply.add */\n  or(tag_0_83, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/MetaCoin.sol\":11429:11453  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/MetaCoin.sol\":11414:11426  _totalSupply */\n  0x5\n    /* \"contracts/MetaCoin.sol\":11414:11453  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MetaCoin.sol\":11484:11514  _balances[account].add(amount) */\n  tag_14\n    /* \"contracts/MetaCoin.sol\":11507:11513  amount */\n  dup2\n    /* \"contracts/MetaCoin.sol\":11484:11493  _balances */\n  0x0\n    /* \"contracts/MetaCoin.sol\":11484:11502  _balances[account] */\n  dup1\n    /* \"contracts/MetaCoin.sol\":11494:11501  account */\n  dup6\n    /* \"contracts/MetaCoin.sol\":11484:11502  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n  sload\n    /* \"contracts/MetaCoin.sol\":11484:11506  _balances[account].add */\n  or(tag_0_83, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/MetaCoin.sol\":11484:11514  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_14:\n    /* \"contracts/MetaCoin.sol\":11463:11472  _balances */\n  0x0\n    /* \"contracts/MetaCoin.sol\":11463:11481  _balances[account] */\n  dup1\n    /* \"contracts/MetaCoin.sol\":11473:11480  account */\n  dup5\n    /* \"contracts/MetaCoin.sol\":11463:11481  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/MetaCoin.sol\":11463:11514  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MetaCoin.sol\":11550:11557  account */\n  dup2\n    /* \"contracts/MetaCoin.sol\":11529:11566  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/MetaCoin.sol\":11546:11547  0 */\n  0x0\n    /* \"contracts/MetaCoin.sol\":11529:11566  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/MetaCoin.sol\":11559:11565  amount */\n  dup4\n    /* \"contracts/MetaCoin.sol\":11529:11566  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/MetaCoin.sol\":11271:11573  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MetaCoin.sol\":1144:1320  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_13:\n    /* \"contracts/MetaCoin.sol\":1202:1209  uint256 */\n  0x0\n    /* \"contracts/MetaCoin.sol\":1221:1230  uint256 c */\n  dup1\n    /* \"contracts/MetaCoin.sol\":1237:1238  b */\n  dup3\n    /* \"contracts/MetaCoin.sol\":1233:1234  a */\n  dup5\n    /* \"contracts/MetaCoin.sol\":1233:1238  a + b */\n  add\n    /* \"contracts/MetaCoin.sol\":1221:1238  uint256 c = a + b */\n  swap1\n  pop\n    /* \"contracts/MetaCoin.sol\":1261:1262  a */\n  dup4\n    /* \"contracts/MetaCoin.sol\":1256:1257  c */\n  dup2\n    /* \"contracts/MetaCoin.sol\":1256:1262  c >= a */\n  lt\n  iszero\n    /* \"contracts/MetaCoin.sol\":1248:1294  require(c >= a, \"SafeMath: addition overflow\") */\n  iszero\n  iszero\n  tag_16\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/MetaCoin.sol\":1312:1313  c */\n  dup1\n    /* \"contracts/MetaCoin.sol\":1305:1313  return c */\n  swap2\n  pop\n  pop\n    /* \"contracts/MetaCoin.sol\":1144:1320  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MetaCoin.sol\":4988:13465  contract MetaCoin is IERC20 {... */\ntag_5:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_17)\ntag_18:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_19)\ntag_20:\ntag_17:\n  pop\n  swap1\n  pop\n  tag_21\n  swap2\n  swap1\n  jump\t// in(tag_22)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  tag_23\n  swap2\n  swap1\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_24)\ntag_25:\n  pop\n  swap1\n  jump\ntag_23:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MetaCoin.sol\":4988:13465  contract MetaCoin is IERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4bb278f3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/MetaCoin.sol\":5714:5795  function name() public view returns (string memory) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/MetaCoin.sol\":5714:5795  function name() public view returns (string memory) {... */\n      pop\n      tag_15\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MetaCoin.sol\":5714:5795  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":7884:8029  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/MetaCoin.sol\":7884:8029  function approve(address spender, uint256 value) public returns (bool) {... */\n      pop\n      tag_22\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"contracts/MetaCoin.sol\":7884:8029  function approve(address spender, uint256 value) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":6849:6938  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"contracts/MetaCoin.sol\":6849:6938  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":8486:8738  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"contracts/MetaCoin.sol\":8486:8738  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/MetaCoin.sol\":8486:8738  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_31)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":6548:6629  function decimals() public view returns (uint8) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"contracts/MetaCoin.sol\":6548:6629  function decimals() public view returns (uint8) {... */\n      pop\n      tag_33\n      jump(tag_34)\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":9133:9336  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/MetaCoin.sol\":9133:9336  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      pop\n      tag_36\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_37:\n        /* \"contracts/MetaCoin.sol\":9133:9336  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_38)\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":7466:7556  function finalize() public returns (bool){... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"contracts/MetaCoin.sol\":7466:7556  function finalize() public returns (bool){... */\n      pop\n      tag_40\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":6996:7104  function balanceOf(address account) public view returns (uint256) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_42:\n        /* \"contracts/MetaCoin.sol\":6996:7104  function balanceOf(address account) public view returns (uint256) {... */\n      pop\n      tag_43\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"contracts/MetaCoin.sol\":6996:7104  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_45)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":5908:5993  function symbol() public view returns (string memory) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/MetaCoin.sol\":5908:5993  function symbol() public view returns (string memory) {... */\n      pop\n      tag_47\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_49:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_49)\n    tag_50:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/MetaCoin.sol\":5908:5993  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_52:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":9823:10036  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_53:\n        /* \"contracts/MetaCoin.sol\":9823:10036  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      pop\n      tag_54\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n        /* \"contracts/MetaCoin.sol\":9823:10036  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_56)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":7307:7460  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n        /* \"contracts/MetaCoin.sol\":7307:7460  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      pop\n      tag_58\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_59:\n        /* \"contracts/MetaCoin.sol\":7307:7460  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_60)\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":7614:7746  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"contracts/MetaCoin.sol\":7614:7746  function allowance(address owner, address spender) public view returns (uint256) {... */\n      pop\n      tag_62\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"contracts/MetaCoin.sol\":7614:7746  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_64)\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MetaCoin.sol\":5714:5795  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"contracts/MetaCoin.sol\":5751:5764  string memory */\n      0x60\n        /* \"contracts/MetaCoin.sol\":5783:5788  _name */\n      0x2\n        /* \"contracts/MetaCoin.sol\":5776:5788  return _name */\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":5714:5795  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":7884:8029  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_24:\n        /* \"contracts/MetaCoin.sol\":7949:7953  bool */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7965:8001  _approve(msg.sender, spender, value) */\n      tag_70\n        /* \"contracts/MetaCoin.sol\":7974:7984  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":7986:7993  spender */\n      dup5\n        /* \"contracts/MetaCoin.sol\":7995:8000  value */\n      dup5\n        /* \"contracts/MetaCoin.sol\":7965:7973  _approve */\n      tag_71\n        /* \"contracts/MetaCoin.sol\":7965:8001  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/MetaCoin.sol\":8018:8022  true */\n      0x1\n        /* \"contracts/MetaCoin.sol\":8011:8022  return true */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":7884:8029  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":6849:6938  function totalSupply() public view returns (uint256) {... */\n    tag_27:\n        /* \"contracts/MetaCoin.sol\":6893:6900  uint256 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":6919:6931  _totalSupply */\n      sload(0x5)\n        /* \"contracts/MetaCoin.sol\":6912:6931  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":6849:6938  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":8486:8738  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"contracts/MetaCoin.sol\":8575:8579  bool */\n      0x0\n        /* \"contracts/MetaCoin.sol\":8591:8627  _transfer(sender, recipient, amount) */\n      tag_74\n        /* \"contracts/MetaCoin.sol\":8601:8607  sender */\n      dup5\n        /* \"contracts/MetaCoin.sol\":8609:8618  recipient */\n      dup5\n        /* \"contracts/MetaCoin.sol\":8620:8626  amount */\n      dup5\n        /* \"contracts/MetaCoin.sol\":8591:8600  _transfer */\n      tag_75\n        /* \"contracts/MetaCoin.sol\":8591:8627  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/MetaCoin.sol\":8637:8710  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_76\n        /* \"contracts/MetaCoin.sol\":8646:8652  sender */\n      dup5\n        /* \"contracts/MetaCoin.sol\":8654:8664  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":8666:8709  _allowances[sender][msg.sender].sub(amount) */\n      tag_77\n        /* \"contracts/MetaCoin.sol\":8702:8708  amount */\n      dup6\n        /* \"contracts/MetaCoin.sol\":8666:8677  _allowances */\n      0x1\n        /* \"contracts/MetaCoin.sol\":8666:8685  _allowances[sender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":8678:8684  sender */\n      dup11\n        /* \"contracts/MetaCoin.sol\":8666:8685  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":8666:8697  _allowances[sender][msg.sender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":8686:8696  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":8666:8697  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":8666:8701  _allowances[sender][msg.sender].sub */\n      tag_78\n      swap1\n        /* \"contracts/MetaCoin.sol\":8666:8709  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"contracts/MetaCoin.sol\":8637:8645  _approve */\n      tag_71\n        /* \"contracts/MetaCoin.sol\":8637:8710  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/MetaCoin.sol\":8727:8731  true */\n      0x1\n        /* \"contracts/MetaCoin.sol\":8720:8731  return true */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":8486:8738  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":6548:6629  function decimals() public view returns (uint8) {... */\n    tag_34:\n        /* \"contracts/MetaCoin.sol\":6589:6594  uint8 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":6613:6622  _decimals */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MetaCoin.sol\":6606:6622  return _decimals */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":6548:6629  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":9133:9336  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_38:\n        /* \"contracts/MetaCoin.sol\":9213:9217  bool */\n      0x0\n        /* \"contracts/MetaCoin.sol\":9229:9308  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_81\n        /* \"contracts/MetaCoin.sol\":9238:9248  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":9250:9257  spender */\n      dup5\n        /* \"contracts/MetaCoin.sol\":9259:9307  _allowances[msg.sender][spender].add(addedValue) */\n      tag_82\n        /* \"contracts/MetaCoin.sol\":9296:9306  addedValue */\n      dup6\n        /* \"contracts/MetaCoin.sol\":9259:9270  _allowances */\n      0x1\n        /* \"contracts/MetaCoin.sol\":9259:9282  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":9271:9281  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":9259:9282  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":9259:9291  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":9283:9290  spender */\n      dup10\n        /* \"contracts/MetaCoin.sol\":9259:9291  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":9259:9295  _allowances[msg.sender][spender].add */\n      tag_83\n      swap1\n        /* \"contracts/MetaCoin.sol\":9259:9307  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/MetaCoin.sol\":9229:9237  _approve */\n      tag_71\n        /* \"contracts/MetaCoin.sol\":9229:9308  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_81:\n        /* \"contracts/MetaCoin.sol\":9325:9329  true */\n      0x1\n        /* \"contracts/MetaCoin.sol\":9318:9329  return true */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":9133:9336  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":7466:7556  function finalize() public returns (bool){... */\n    tag_41:\n        /* \"contracts/MetaCoin.sol\":7502:7506  bool */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7517:7528  _finalize() */\n      tag_85\n        /* \"contracts/MetaCoin.sol\":7517:7526  _finalize */\n      tag_86\n        /* \"contracts/MetaCoin.sol\":7517:7528  _finalize() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/MetaCoin.sol\":7545:7549  true */\n      0x1\n        /* \"contracts/MetaCoin.sol\":7538:7549  return true */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":7466:7556  function finalize() public returns (bool){... */\n      swap1\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":6996:7104  function balanceOf(address account) public view returns (uint256) {... */\n    tag_45:\n        /* \"contracts/MetaCoin.sol\":7053:7060  uint256 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7079:7088  _balances */\n      dup1\n        /* \"contracts/MetaCoin.sol\":7079:7097  _balances[account] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7089:7096  account */\n      dup4\n        /* \"contracts/MetaCoin.sol\":7079:7097  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":7072:7097  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":6996:7104  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":5908:5993  function symbol() public view returns (string memory) {... */\n    tag_48:\n        /* \"contracts/MetaCoin.sol\":5947:5960  string memory */\n      0x60\n        /* \"contracts/MetaCoin.sol\":5979:5986  _symbol */\n      0x3\n        /* \"contracts/MetaCoin.sol\":5972:5986  return _symbol */\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":5908:5993  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":9823:10036  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_56:\n        /* \"contracts/MetaCoin.sol\":9908:9912  bool */\n      0x0\n        /* \"contracts/MetaCoin.sol\":9924:10008  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_93\n        /* \"contracts/MetaCoin.sol\":9933:9943  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":9945:9952  spender */\n      dup5\n        /* \"contracts/MetaCoin.sol\":9954:10007  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_94\n        /* \"contracts/MetaCoin.sol\":9991:10006  subtractedValue */\n      dup6\n        /* \"contracts/MetaCoin.sol\":9954:9965  _allowances */\n      0x1\n        /* \"contracts/MetaCoin.sol\":9954:9977  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":9966:9976  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":9954:9977  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":9954:9986  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":9978:9985  spender */\n      dup10\n        /* \"contracts/MetaCoin.sol\":9954:9986  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":9954:9990  _allowances[msg.sender][spender].sub */\n      tag_78\n      swap1\n        /* \"contracts/MetaCoin.sol\":9954:10007  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"contracts/MetaCoin.sol\":9924:9932  _approve */\n      tag_71\n        /* \"contracts/MetaCoin.sol\":9924:10008  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/MetaCoin.sol\":10025:10029  true */\n      0x1\n        /* \"contracts/MetaCoin.sol\":10018:10029  return true */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":9823:10036  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":7307:7460  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_60:\n        /* \"contracts/MetaCoin.sol\":7376:7380  bool */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7392:7432  _transfer(msg.sender, recipient, amount) */\n      tag_96\n        /* \"contracts/MetaCoin.sol\":7402:7412  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":7414:7423  recipient */\n      dup5\n        /* \"contracts/MetaCoin.sol\":7425:7431  amount */\n      dup5\n        /* \"contracts/MetaCoin.sol\":7392:7401  _transfer */\n      tag_75\n        /* \"contracts/MetaCoin.sol\":7392:7432  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/MetaCoin.sol\":7449:7453  true */\n      0x1\n        /* \"contracts/MetaCoin.sol\":7442:7453  return true */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":7307:7460  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":7614:7746  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_64:\n        /* \"contracts/MetaCoin.sol\":7686:7693  uint256 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7712:7723  _allowances */\n      0x1\n        /* \"contracts/MetaCoin.sol\":7712:7730  _allowances[owner] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7724:7729  owner */\n      dup5\n        /* \"contracts/MetaCoin.sol\":7712:7730  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":7712:7739  _allowances[owner][spender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":7731:7738  spender */\n      dup4\n        /* \"contracts/MetaCoin.sol\":7712:7739  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":7705:7739  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":7614:7746  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":12772:13101  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_71:\n        /* \"contracts/MetaCoin.sol\":12881:12882  0 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":12864:12883  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":12864:12869  owner */\n      dup4\n        /* \"contracts/MetaCoin.sol\":12864:12883  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MetaCoin.sol\":12856:12924  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      dup2\n      mstore\n      0x20\n      add\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/MetaCoin.sol\":12961:12962  0 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":12942:12963  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":12942:12949  spender */\n      dup3\n        /* \"contracts/MetaCoin.sol\":12942:12963  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MetaCoin.sol\":12934:13002  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      iszero\n      iszero\n      tag_100\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      dup2\n      mstore\n      0x20\n      add\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/MetaCoin.sol\":13043:13048  value */\n      dup1\n        /* \"contracts/MetaCoin.sol\":13013:13024  _allowances */\n      0x1\n        /* \"contracts/MetaCoin.sol\":13013:13031  _allowances[owner] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":13025:13030  owner */\n      dup6\n        /* \"contracts/MetaCoin.sol\":13013:13031  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":13013:13040  _allowances[owner][spender] */\n      0x0\n        /* \"contracts/MetaCoin.sol\":13032:13039  spender */\n      dup5\n        /* \"contracts/MetaCoin.sol\":13013:13040  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":13013:13048  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MetaCoin.sol\":13079:13086  spender */\n      dup2\n        /* \"contracts/MetaCoin.sol\":13063:13094  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":13072:13077  owner */\n      dup4\n        /* \"contracts/MetaCoin.sol\":13063:13094  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/MetaCoin.sol\":13088:13093  value */\n      dup4\n        /* \"contracts/MetaCoin.sol\":13063:13094  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MetaCoin.sol\":12772:13101  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":10510:11001  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_75:\n        /* \"contracts/MetaCoin.sol\":10625:10626  0 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":10607:10627  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":10607:10613  sender */\n      dup4\n        /* \"contracts/MetaCoin.sol\":10607:10627  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MetaCoin.sol\":10599:10669  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      iszero\n      iszero\n      tag_102\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      dup2\n      mstore\n      0x20\n      add\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/MetaCoin.sol\":10708:10709  0 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":10687:10710  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":10687:10696  recipient */\n      dup3\n        /* \"contracts/MetaCoin.sol\":10687:10710  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MetaCoin.sol\":10679:10750  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      iszero\n      iszero\n      tag_103\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      dup2\n      mstore\n      0x20\n      add\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/MetaCoin.sol\":10782:10788  sender */\n      dup3\n        /* \"contracts/MetaCoin.sol\":10768:10788  msg.sender == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":10768:10778  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":10768:10788  msg.sender == sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MetaCoin.sol\":10760:10819  require(msg.sender == sender, \"ERC20: Caller isn't sender\") */\n      iszero\n      iszero\n      tag_104\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a2043616c6c65722069736e27742073656e646572000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/MetaCoin.sol\":10850:10879  _balances[sender].sub(amount) */\n      tag_105\n        /* \"contracts/MetaCoin.sol\":10872:10878  amount */\n      dup2\n        /* \"contracts/MetaCoin.sol\":10850:10859  _balances */\n      0x0\n        /* \"contracts/MetaCoin.sol\":10850:10867  _balances[sender] */\n      dup1\n        /* \"contracts/MetaCoin.sol\":10860:10866  sender */\n      dup7\n        /* \"contracts/MetaCoin.sol\":10850:10867  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":10850:10871  _balances[sender].sub */\n      tag_78\n      swap1\n        /* \"contracts/MetaCoin.sol\":10850:10879  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"contracts/MetaCoin.sol\":10830:10839  _balances */\n      0x0\n        /* \"contracts/MetaCoin.sol\":10830:10847  _balances[sender] */\n      dup1\n        /* \"contracts/MetaCoin.sol\":10840:10846  sender */\n      dup6\n        /* \"contracts/MetaCoin.sol\":10830:10847  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":10830:10879  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MetaCoin.sol\":10912:10944  _balances[recipient].add(amount) */\n      tag_106\n        /* \"contracts/MetaCoin.sol\":10937:10943  amount */\n      dup2\n        /* \"contracts/MetaCoin.sol\":10912:10921  _balances */\n      0x0\n        /* \"contracts/MetaCoin.sol\":10912:10932  _balances[recipient] */\n      dup1\n        /* \"contracts/MetaCoin.sol\":10922:10931  recipient */\n      dup6\n        /* \"contracts/MetaCoin.sol\":10912:10932  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/MetaCoin.sol\":10912:10936  _balances[recipient].add */\n      tag_83\n      swap1\n        /* \"contracts/MetaCoin.sol\":10912:10944  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"contracts/MetaCoin.sol\":10889:10898  _balances */\n      0x0\n        /* \"contracts/MetaCoin.sol\":10889:10909  _balances[recipient] */\n      dup1\n        /* \"contracts/MetaCoin.sol\":10899:10908  recipient */\n      dup5\n        /* \"contracts/MetaCoin.sol\":10889:10909  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/MetaCoin.sol\":10889:10944  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MetaCoin.sol\":10976:10985  recipient */\n      dup2\n        /* \"contracts/MetaCoin.sol\":10959:10994  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":10968:10974  sender */\n      dup4\n        /* \"contracts/MetaCoin.sol\":10959:10994  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/MetaCoin.sol\":10987:10993  amount */\n      dup4\n        /* \"contracts/MetaCoin.sol\":10959:10994  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MetaCoin.sol\":10510:11001  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":1584:1763  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"contracts/MetaCoin.sol\":1642:1649  uint256 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":1674:1675  a */\n      dup3\n        /* \"contracts/MetaCoin.sol\":1669:1670  b */\n      dup3\n        /* \"contracts/MetaCoin.sol\":1669:1675  b <= a */\n      gt\n      iszero\n        /* \"contracts/MetaCoin.sol\":1661:1710  require(b <= a, \"SafeMath: subtraction overflow\") */\n      iszero\n      iszero\n      tag_108\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/MetaCoin.sol\":1720:1729  uint256 c */\n      0x0\n        /* \"contracts/MetaCoin.sol\":1736:1737  b */\n      dup3\n        /* \"contracts/MetaCoin.sol\":1732:1733  a */\n      dup5\n        /* \"contracts/MetaCoin.sol\":1732:1737  a - b */\n      sub\n        /* \"contracts/MetaCoin.sol\":1720:1737  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":1755:1756  c */\n      dup1\n        /* \"contracts/MetaCoin.sol\":1748:1756  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/MetaCoin.sol\":1584:1763  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":1144:1320  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_83:\n        /* \"contracts/MetaCoin.sol\":1202:1209  uint256 */\n      0x0\n        /* \"contracts/MetaCoin.sol\":1221:1230  uint256 c */\n      dup1\n        /* \"contracts/MetaCoin.sol\":1237:1238  b */\n      dup3\n        /* \"contracts/MetaCoin.sol\":1233:1234  a */\n      dup5\n        /* \"contracts/MetaCoin.sol\":1233:1238  a + b */\n      add\n        /* \"contracts/MetaCoin.sol\":1221:1238  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/MetaCoin.sol\":1261:1262  a */\n      dup4\n        /* \"contracts/MetaCoin.sol\":1256:1257  c */\n      dup2\n        /* \"contracts/MetaCoin.sol\":1256:1262  c >= a */\n      lt\n      iszero\n        /* \"contracts/MetaCoin.sol\":1248:1294  require(c >= a, \"SafeMath: addition overflow\") */\n      iszero\n      iszero\n      tag_110\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/MetaCoin.sol\":1312:1313  c */\n      dup1\n        /* \"contracts/MetaCoin.sol\":1305:1313  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/MetaCoin.sol\":1144:1320  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MetaCoin.sol\":12192:12346  function _finalize() internal {... */\n    tag_86:\n        /* \"contracts/MetaCoin.sol\":12254:12260  _owner */\n      0x4\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":12240:12260  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MetaCoin.sol\":12240:12250  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":12240:12260  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MetaCoin.sol\":12232:12305  require(msg.sender == _owner, \"ERC20: Can't destroy caller isn't owner.\") */\n      iszero\n      iszero\n      tag_112\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a2043616e27742064657374726f792063616c6c65722069736e27\n      dup2\n      mstore\n      0x20\n      add\n      0x74206f776e65722e000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/MetaCoin.sol\":12328:12338  msg.sender */\n      caller\n        /* \"contracts/MetaCoin.sol\":12315:12339  selfdestruct(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa165627a7a72305820406ac227c9f0f899640ba0acd56ae024074dd264aafd870e4fbe73068885c08f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040805190810160405280600a81526020017f6f72616e6765436f696e00000000000000000000000000000000000000000000815250600290805190602001906200005f929190620003ac565b506040805190810160405280600381526020017f4f524e000000000000000000000000000000000000000000000000000000000081525060039080519060200190620000ad929190620003ac565b506002600460006101000a81548160ff021916908360ff16021790555033600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200013d7362b9a2f427ae8649b2467e08095c65551140926d6298968062000143640100000000026401000000009004565b6200045b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620001e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6200020e816005546200032164010000000002620010f6179091906401000000009004565b60058190555062000275816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200032164010000000002620010f6179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808284019050838110151515620003a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003ef57805160ff191683800117855562000420565b8280016001018555821562000420579182015b828111156200041f57825182559160200191906001019062000402565b5b5090506200042f919062000433565b5090565b6200045891905b80821115620004545760008160009055506001016200043a565b5090565b90565b6112b0806200046b6000396000f3fe6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bf578063095ea7b31461014f57806318160ddd146101c257806323b872dd146101ed578063313ce5671461028057806339509351146102b15780634bb278f31461032457806370a082311461035357806395d89b41146103b8578063a457c2d714610448578063a9059cbb146104bb578063dd62ed3e1461052e575b600080fd5b3480156100cb57600080fd5b506100d46105b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b506101a86004803603604081101561017257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610655565b604051808215151515815260200191505060405180910390f35b3480156101ce57600080fd5b506101d761066c565b6040518082815260200191505060405180910390f35b3480156101f957600080fd5b506102666004803603606081101561021057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610676565b604051808215151515815260200191505060405180910390f35b34801561028c57600080fd5b50610295610727565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102bd57600080fd5b5061030a600480360360408110156102d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061073e565b604051808215151515815260200191505060405180910390f35b34801561033057600080fd5b506103396107e3565b604051808215151515815260200191505060405180910390f35b34801561035f57600080fd5b506103a26004803603602081101561037657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f4565b6040518082815260200191505060405180910390f35b3480156103c457600080fd5b506103cd61083c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561040d5780820151818401526020810190506103f2565b50505050905090810190601f16801561043a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045457600080fd5b506104a16004803603604081101561046b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108de565b604051808215151515815260200191505060405180910390f35b3480156104c757600080fd5b50610514600480360360408110156104de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610983565b604051808215151515815260200191505060405180910390f35b34801561053a57600080fd5b5061059d6004803603604081101561055157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099a565b6040518082815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b5050505050905090565b6000610662338484610a21565b6001905092915050565b6000600554905090565b6000610683848484610ca2565b61071c843361071785600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106b90919063ffffffff16565b610a21565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006107d933846107d485600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f690919063ffffffff16565b610a21565b6001905092915050565b60006107ed611180565b6001905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108d45780601f106108a9576101008083540402835291602001916108d4565b820191906000526020600020905b8154815290600101906020018083116108b757829003601f168201915b5050505050905090565b6000610979338461097485600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106b90919063ffffffff16565b610a21565b6001905092915050565b6000610990338484610ca2565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610aec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610bb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610edb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f45524332303a2043616c6c65722069736e27742073656e64657200000000000081525060200191505060405180910390fd5b610f2c816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fbf816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111515156110e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110151515611176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561126b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f45524332303a2043616e27742064657374726f792063616c6c65722069736e2781526020017f74206f776e65722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16fffea165627a7a72305820406ac227c9f0f899640ba0acd56ae024074dd264aafd870e4fbe73068885c08f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6F72616E6765436F696E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x5F SWAP3 SWAP2 SWAP1 PUSH3 0x3AC JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F524E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAD SWAP3 SWAP2 SWAP1 PUSH3 0x3AC JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x13D PUSH20 0x62B9A2F427AE8649B2467E08095C65551140926D PUSH3 0x989680 PUSH3 0x143 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x45B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH3 0x1E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x20E DUP2 PUSH1 0x5 SLOAD PUSH3 0x321 PUSH5 0x100000000 MUL PUSH3 0x10F6 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH3 0x275 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x321 PUSH5 0x100000000 MUL PUSH3 0x10F6 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3EF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x420 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x420 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x41F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x402 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x42F SWAP2 SWAP1 PUSH3 0x433 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x458 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x454 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x43A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x12B0 DUP1 PUSH3 0x46B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x52E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x141 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x43A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x64B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x620 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 CALLER DUP5 DUP5 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 DUP5 DUP5 DUP5 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x71C DUP5 CALLER PUSH2 0x717 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x106B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 CALLER DUP5 PUSH2 0x7D4 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10F6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x979 CALLER DUP5 PUSH2 0x974 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x106B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x990 CALLER DUP5 DUP5 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A2043616C6C65722069736E27742073656E646572000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2C DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x106B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFBF DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10F6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x126B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A2043616E27742064657374726F792063616C6C65722069736E27 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74206F776E65722E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 BLOCKHASH PUSH11 0xC227C9F0F899640BA0ACD5 PUSH11 0xE024074DD264AAFD870E4F 0xbe PUSH20 0x68885C08F002900000000000000000000000000 ",
							"sourceMap": "4988:8477:0:-;;;5423:226;8:9:-1;5:2;;;30:1;27;20:12;5:2;5423:226:0;5455:20;;;;;;;;;;;;;;;;;;:5;:20;;;;;;;;;;;;:::i;:::-;;5485:15;;;;;;;;;;;;;;;;;;:7;:15;;;;;;;;;;;;:::i;:::-;;5522:1;5510:9;;:13;;;;;;;;;;;;;;;;;;5542:10;5533:6;;:19;;;;;;;;;;;;;;;;;;5563:67;5569:42;5613:16;5563:5;;;:67;;;:::i;:::-;4988:8477;;11271:302;11365:1;11346:21;;:7;:21;;;;11338:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11429:24;11446:6;11429:12;;:16;;;;;;:24;;;;;:::i;:::-;11414:12;:39;;;;11484:30;11507:6;11484:9;:18;11494:7;11484:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;11463:9;:18;11473:7;11463:18;;;;;;;;;;;;;;;:51;;;;11550:7;11529:37;;11546:1;11529:37;;;11559:6;11529:37;;;;;;;;;;;;;;;;;;11271:302;;:::o;1144:176::-;1202:7;1221:9;1237:1;1233;:5;1221:17;;1261:1;1256;:6;;1248:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:1;1305:8;;;1144:176;;;;:::o;4988:8477::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bf578063095ea7b31461014f57806318160ddd146101c257806323b872dd146101ed578063313ce5671461028057806339509351146102b15780634bb278f31461032457806370a082311461035357806395d89b41146103b8578063a457c2d714610448578063a9059cbb146104bb578063dd62ed3e1461052e575b600080fd5b3480156100cb57600080fd5b506100d46105b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b506101a86004803603604081101561017257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610655565b604051808215151515815260200191505060405180910390f35b3480156101ce57600080fd5b506101d761066c565b6040518082815260200191505060405180910390f35b3480156101f957600080fd5b506102666004803603606081101561021057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610676565b604051808215151515815260200191505060405180910390f35b34801561028c57600080fd5b50610295610727565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102bd57600080fd5b5061030a600480360360408110156102d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061073e565b604051808215151515815260200191505060405180910390f35b34801561033057600080fd5b506103396107e3565b604051808215151515815260200191505060405180910390f35b34801561035f57600080fd5b506103a26004803603602081101561037657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f4565b6040518082815260200191505060405180910390f35b3480156103c457600080fd5b506103cd61083c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561040d5780820151818401526020810190506103f2565b50505050905090810190601f16801561043a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561045457600080fd5b506104a16004803603604081101561046b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108de565b604051808215151515815260200191505060405180910390f35b3480156104c757600080fd5b50610514600480360360408110156104de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610983565b604051808215151515815260200191505060405180910390f35b34801561053a57600080fd5b5061059d6004803603604081101561055157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061099a565b6040518082815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b5050505050905090565b6000610662338484610a21565b6001905092915050565b6000600554905090565b6000610683848484610ca2565b61071c843361071785600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106b90919063ffffffff16565b610a21565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006107d933846107d485600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f690919063ffffffff16565b610a21565b6001905092915050565b60006107ed611180565b6001905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108d45780601f106108a9576101008083540402835291602001916108d4565b820191906000526020600020905b8154815290600101906020018083116108b757829003601f168201915b5050505050905090565b6000610979338461097485600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106b90919063ffffffff16565b610a21565b6001905092915050565b6000610990338484610ca2565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610aec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610bb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610d6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610e38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610edb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f45524332303a2043616c6c65722069736e27742073656e64657200000000000081525060200191505060405180910390fd5b610f2c816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461106b90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fbf816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110f690919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008282111515156110e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110151515611176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561126b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f45524332303a2043616e27742064657374726f792063616c6c65722069736e2781526020017f74206f776e65722e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16fffea165627a7a72305820406ac227c9f0f899640ba0acd56ae024074dd264aafd870e4fbe73068885c08f0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x52E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x5B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x141 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x295 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CD PUSH2 0x83C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x43A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x64B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x620 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x662 CALLER DUP5 DUP5 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x683 DUP5 DUP5 DUP5 PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x71C DUP5 CALLER PUSH2 0x717 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x106B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 CALLER DUP5 PUSH2 0x7D4 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10F6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x979 CALLER DUP5 PUSH2 0x974 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x106B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x990 CALLER DUP5 DUP5 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xAEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xE38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A2043616C6C65722069736E27742073656E646572000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF2C DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x106B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xFBF DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10F6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x126B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A2043616E27742064657374726F792063616C6C65722069736E27 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x74206F776E65722E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 BLOCKHASH PUSH11 0xC227C9F0F899640BA0ACD5 PUSH11 0xE024074DD264AAFD870E4F 0xbe PUSH20 0x68885C08F002900000000000000000000000000 ",
							"sourceMap": "4988:8477:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5714:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5714:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7884:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7884:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7884:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6849:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6849:89:0;;;;;;;;;;;;;;;;;;;;;;;8486:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8486:252:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8486:252:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6548:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6548:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;9133:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9133:203:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9133:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7466:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7466:90:0;;;;;;;;;;;;;;;;;;;;;;;;;;;6996:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6996:108:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6996:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5908:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5908:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5908:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9823:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9823:213:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9823:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7307:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7307:153:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7307:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7614:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7614:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7614:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:81;5751:13;5783:5;5776:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5714:81;:::o;7884:145::-;7949:4;7965:36;7974:10;7986:7;7995:5;7965:8;:36::i;:::-;8018:4;8011:11;;7884:145;;;;:::o;6849:89::-;6893:7;6919:12;;6912:19;;6849:89;:::o;8486:252::-;8575:4;8591:36;8601:6;8609:9;8620:6;8591:9;:36::i;:::-;8637:73;8646:6;8654:10;8666:43;8702:6;8666:11;:19;8678:6;8666:19;;;;;;;;;;;;;;;:31;8686:10;8666:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;8637:8;:73::i;:::-;8727:4;8720:11;;8486:252;;;;;:::o;6548:81::-;6589:5;6613:9;;;;;;;;;;;6606:16;;6548:81;:::o;9133:203::-;9213:4;9229:79;9238:10;9250:7;9259:48;9296:10;9259:11;:23;9271:10;9259:23;;;;;;;;;;;;;;;:32;9283:7;9259:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;9229:8;:79::i;:::-;9325:4;9318:11;;9133:203;;;;:::o;7466:90::-;7502:4;7517:11;:9;:11::i;:::-;7545:4;7538:11;;7466:90;:::o;6996:108::-;7053:7;7079:9;:18;7089:7;7079:18;;;;;;;;;;;;;;;;7072:25;;6996:108;;;:::o;5908:85::-;5947:13;5979:7;5972:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5908:85;:::o;9823:213::-;9908:4;9924:84;9933:10;9945:7;9954:53;9991:15;9954:11;:23;9966:10;9954:23;;;;;;;;;;;;;;;:32;9978:7;9954:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;9924:8;:84::i;:::-;10025:4;10018:11;;9823:213;;;;:::o;7307:153::-;7376:4;7392:40;7402:10;7414:9;7425:6;7392:9;:40::i;:::-;7449:4;7442:11;;7307:153;;;;:::o;7614:132::-;7686:7;7712:11;:18;7724:5;7712:18;;;;;;;;;;;;;;;:27;7731:7;7712:27;;;;;;;;;;;;;;;;7705:34;;7614:132;;;;:::o;12772:329::-;12881:1;12864:19;;:5;:19;;;;12856:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12961:1;12942:21;;:7;:21;;;;12934:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13043:5;13013:11;:18;13025:5;13013:18;;;;;;;;;;;;;;;:27;13032:7;13013:27;;;;;;;;;;;;;;;:35;;;;13079:7;13063:31;;13072:5;13063:31;;;13088:5;13063:31;;;;;;;;;;;;;;;;;;12772:329;;;:::o;10510:491::-;10625:1;10607:20;;:6;:20;;;;10599:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10708:1;10687:23;;:9;:23;;;;10679:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10782:6;10768:20;;:10;:20;;;10760:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10850:29;10872:6;10850:9;:17;10860:6;10850:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;10830:9;:17;10840:6;10830:17;;;;;;;;;;;;;;;:49;;;;10912:32;10937:6;10912:9;:20;10922:9;10912:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;10889:9;:20;10899:9;10889:20;;;;;;;;;;;;;;;:55;;;;10976:9;10959:35;;10968:6;10959:35;;;10987:6;10959:35;;;;;;;;;;;;;;;;;;10510:491;;;:::o;1584:179::-;1642:7;1674:1;1669;:6;;1661:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1720:9;1736:1;1732;:5;1720:17;;1755:1;1748:8;;;1584:179;;;;:::o;1144:176::-;1202:7;1221:9;1237:1;1233;:5;1221:17;;1261:1;1256;:6;;1248:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:1;1305:8;;;1144:176;;;;:::o;12192:154::-;12254:6;;;;;;;;;;;12240:20;;:10;:20;;;12232:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12328:10;12315:24;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "956800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "952",
								"approve(address,uint256)": "22507",
								"balanceOf(address)": "739",
								"decimals()": "538",
								"decreaseAllowance(address,uint256)": "infinite",
								"finalize()": "30608",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "446",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_finalize()": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "MSTORE"
								},
								{
									"begin": 5423,
									"end": 5649,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 5423,
									"end": 5649,
									"name": "POP"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "DUP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "MLOAD"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "DUP2"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "ADD"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "MSTORE"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "DUP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "DUP2"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "MSTORE"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "ADD"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH",
									"value": "6F72616E6765436F696E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "DUP2"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "MSTORE"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "POP"
								},
								{
									"begin": 5455,
									"end": 5460,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "DUP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "MLOAD"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "ADD"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP3"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP2"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "SWAP1"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "JUMPDEST"
								},
								{
									"begin": 5455,
									"end": 5475,
									"name": "POP"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "DUP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "MLOAD"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "DUP2"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "ADD"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "MSTORE"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "DUP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "DUP2"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "MSTORE"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "ADD"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH",
									"value": "4F524E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "DUP2"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "MSTORE"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "POP"
								},
								{
									"begin": 5485,
									"end": 5492,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "DUP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "MLOAD"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "ADD"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP3"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP2"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "SWAP1"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "JUMPDEST"
								},
								{
									"begin": 5485,
									"end": 5500,
									"name": "POP"
								},
								{
									"begin": 5522,
									"end": 5523,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5510,
									"end": 5519,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5510,
									"end": 5519,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "EXP"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "DUP2"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "SLOAD"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "DUP2"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "MUL"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "NOT"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "AND"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "SWAP1"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "DUP4"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "AND"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "MUL"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "OR"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "SWAP1"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "SSTORE"
								},
								{
									"begin": 5510,
									"end": 5523,
									"name": "POP"
								},
								{
									"begin": 5542,
									"end": 5552,
									"name": "CALLER"
								},
								{
									"begin": 5533,
									"end": 5539,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5533,
									"end": 5539,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "EXP"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "DUP2"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "SLOAD"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "DUP2"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "MUL"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "NOT"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "AND"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "SWAP1"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "DUP4"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "AND"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "MUL"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "OR"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "SWAP1"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "SSTORE"
								},
								{
									"begin": 5533,
									"end": 5552,
									"name": "POP"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 5569,
									"end": 5611,
									"name": "PUSH",
									"value": "62B9A2F427AE8649B2467E08095C65551140926D"
								},
								{
									"begin": 5613,
									"end": 5629,
									"name": "PUSH",
									"value": "989680"
								},
								{
									"begin": 5563,
									"end": 5568,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 5563,
									"end": 5568,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5563,
									"end": 5568,
									"name": "MUL"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "SWAP1"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "DIV"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 5563,
									"end": 5630,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP"
								},
								{
									"begin": 11271,
									"end": 11573,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 11271,
									"end": 11573,
									"name": "JUMPDEST"
								},
								{
									"begin": 11365,
									"end": 11366,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11346,
									"end": 11367,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11346,
									"end": 11367,
									"name": "AND"
								},
								{
									"begin": 11346,
									"end": 11353,
									"name": "DUP3"
								},
								{
									"begin": 11346,
									"end": 11367,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11346,
									"end": 11367,
									"name": "AND"
								},
								{
									"begin": 11346,
									"end": 11367,
									"name": "EQ"
								},
								{
									"begin": 11346,
									"end": 11367,
									"name": "ISZERO"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "ISZERO"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "ISZERO"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "JUMPI"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "MLOAD"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP2"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "ADD"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "ADD"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP3"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP2"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "SUB"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP3"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP2"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "ADD"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP2"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "POP"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "ADD"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "SWAP2"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "POP"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "POP"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "MLOAD"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "SWAP2"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "SUB"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "SWAP1"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "REVERT"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11338,
									"end": 11403,
									"name": "JUMPDEST"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11446,
									"end": 11452,
									"name": "DUP2"
								},
								{
									"begin": 11429,
									"end": 11441,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11429,
									"end": 11441,
									"name": "SLOAD"
								},
								{
									"begin": 11429,
									"end": 11445,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11429,
									"end": 11445,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11429,
									"end": 11445,
									"name": "MUL"
								},
								{
									"begin": 11429,
									"end": 11445,
									"name": "PUSH [tag]",
									"value": "18446744073709551699"
								},
								{
									"begin": 11429,
									"end": 11445,
									"name": "OR"
								},
								{
									"begin": 11429,
									"end": 11445,
									"name": "SWAP1"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "SWAP2"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "SWAP1"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "SWAP1"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "DIV"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11429,
									"end": 11453,
									"name": "JUMPDEST"
								},
								{
									"begin": 11414,
									"end": 11426,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11414,
									"end": 11453,
									"name": "DUP2"
								},
								{
									"begin": 11414,
									"end": 11453,
									"name": "SWAP1"
								},
								{
									"begin": 11414,
									"end": 11453,
									"name": "SSTORE"
								},
								{
									"begin": 11414,
									"end": 11453,
									"name": "POP"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11507,
									"end": 11513,
									"name": "DUP2"
								},
								{
									"begin": 11484,
									"end": 11493,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "DUP1"
								},
								{
									"begin": 11494,
									"end": 11501,
									"name": "DUP6"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "AND"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "AND"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "DUP2"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "MSTORE"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "ADD"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "SWAP1"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "DUP2"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "MSTORE"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "ADD"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "KECCAK256"
								},
								{
									"begin": 11484,
									"end": 11502,
									"name": "SLOAD"
								},
								{
									"begin": 11484,
									"end": 11506,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11484,
									"end": 11506,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11484,
									"end": 11506,
									"name": "MUL"
								},
								{
									"begin": 11484,
									"end": 11506,
									"name": "PUSH [tag]",
									"value": "18446744073709551699"
								},
								{
									"begin": 11484,
									"end": 11506,
									"name": "OR"
								},
								{
									"begin": 11484,
									"end": 11506,
									"name": "SWAP1"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "SWAP2"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "SWAP1"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "SWAP1"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "DIV"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 11484,
									"end": 11514,
									"name": "JUMPDEST"
								},
								{
									"begin": 11463,
									"end": 11472,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "DUP1"
								},
								{
									"begin": 11473,
									"end": 11480,
									"name": "DUP5"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "AND"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "AND"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "DUP2"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "MSTORE"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "ADD"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "SWAP1"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "DUP2"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "MSTORE"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "ADD"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11463,
									"end": 11481,
									"name": "KECCAK256"
								},
								{
									"begin": 11463,
									"end": 11514,
									"name": "DUP2"
								},
								{
									"begin": 11463,
									"end": 11514,
									"name": "SWAP1"
								},
								{
									"begin": 11463,
									"end": 11514,
									"name": "SSTORE"
								},
								{
									"begin": 11463,
									"end": 11514,
									"name": "POP"
								},
								{
									"begin": 11550,
									"end": 11557,
									"name": "DUP2"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "AND"
								},
								{
									"begin": 11546,
									"end": 11547,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "AND"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11559,
									"end": 11565,
									"name": "DUP4"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "MLOAD"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "DUP1"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "DUP3"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "DUP2"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "MSTORE"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "ADD"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "SWAP2"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "POP"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "POP"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "MLOAD"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "DUP1"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "SWAP2"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "SUB"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "SWAP1"
								},
								{
									"begin": 11529,
									"end": 11566,
									"name": "LOG3"
								},
								{
									"begin": 11271,
									"end": 11573,
									"name": "POP"
								},
								{
									"begin": 11271,
									"end": 11573,
									"name": "POP"
								},
								{
									"begin": 11271,
									"end": 11573,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "JUMPDEST"
								},
								{
									"begin": 1202,
									"end": 1209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1221,
									"end": 1230,
									"name": "DUP1"
								},
								{
									"begin": 1237,
									"end": 1238,
									"name": "DUP3"
								},
								{
									"begin": 1233,
									"end": 1234,
									"name": "DUP5"
								},
								{
									"begin": 1233,
									"end": 1238,
									"name": "ADD"
								},
								{
									"begin": 1221,
									"end": 1238,
									"name": "SWAP1"
								},
								{
									"begin": 1221,
									"end": 1238,
									"name": "POP"
								},
								{
									"begin": 1261,
									"end": 1262,
									"name": "DUP4"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP2"
								},
								{
									"begin": 1256,
									"end": 1262,
									"name": "LT"
								},
								{
									"begin": 1256,
									"end": 1262,
									"name": "ISZERO"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "ISZERO"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "ISZERO"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "JUMPI"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "MLOAD"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP3"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "SUB"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP3"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP2"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "MSTORE"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "POP"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "ADD"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "SWAP2"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "POP"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "POP"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "MLOAD"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "DUP1"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "SWAP2"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "SUB"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "SWAP1"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "REVERT"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1248,
									"end": 1294,
									"name": "JUMPDEST"
								},
								{
									"begin": 1312,
									"end": 1313,
									"name": "DUP1"
								},
								{
									"begin": 1305,
									"end": 1313,
									"name": "SWAP2"
								},
								{
									"begin": 1305,
									"end": 1313,
									"name": "POP"
								},
								{
									"begin": 1305,
									"end": 1313,
									"name": "POP"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "SWAP3"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "SWAP2"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "POP"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "POP"
								},
								{
									"begin": 1144,
									"end": 1320,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SLOAD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "AND"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ISZERO"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "MUL"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SUB"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "AND"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DIV"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "MSTORE"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "KECCAK256"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DIV"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "LT"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPI"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "MLOAD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "NOT"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "AND"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP4"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "OR"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP6"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SSTORE"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP6"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SSTORE"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ISZERO"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPI"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "GT"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ISZERO"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPI"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "MLOAD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SSTORE"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "POP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "POP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "POP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP3"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "GT"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ISZERO"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPI"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP2"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SSTORE"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "POP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "ADD"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "POP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "SWAP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "JUMPDEST"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "DUP1"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "CODECOPY"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4988,
									"end": 13465,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820406ac227c9f0f899640ba0acd56ae024074dd264aafd870e4fbe73068885c08f0029",
									".code": [
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "MSTORE"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "LT"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "SWAP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DIV"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "AND"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "4BB278F3"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "EQ"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPI"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "JUMPDEST"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "DUP1"
										},
										{
											"begin": 4988,
											"end": 13465,
											"name": "REVERT"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP3"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP3"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "AND"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "ISZERO"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMPI"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP3"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP4"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "EXP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "NOT"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "AND"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MSTORE"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP3"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "MLOAD"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "DUP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP2"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SUB"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "RETURN"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "JUMPDEST"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ADD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "AND"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ADD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP3"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ADD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP3"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "JUMP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "JUMPDEST"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "MLOAD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP3"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ISZERO"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ISZERO"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ISZERO"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ISZERO"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "MSTORE"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "ADD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "MLOAD"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "DUP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SUB"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP1"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "RETURN"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "JUMPDEST"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "POP"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "JUMP"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "JUMPDEST"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "MLOAD"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "DUP1"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "DUP3"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "MSTORE"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "ADD"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "SWAP2"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "POP"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "POP"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "MLOAD"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "DUP1"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "SWAP2"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "SUB"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "RETURN"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "JUMPDEST"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ADD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "AND"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ADD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP3"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "AND"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ADD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP3"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ADD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP3"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "JUMP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "JUMPDEST"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "MLOAD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP3"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ISZERO"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ISZERO"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ISZERO"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ISZERO"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "MSTORE"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "ADD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "MLOAD"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "DUP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP2"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SUB"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP1"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "RETURN"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "JUMPDEST"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "POP"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "JUMP"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "JUMPDEST"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "MLOAD"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "DUP1"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "DUP3"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "AND"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "AND"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "DUP2"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "MSTORE"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "ADD"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "SWAP2"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "POP"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "POP"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "MLOAD"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "DUP1"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "SWAP2"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "SUB"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "SWAP1"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "RETURN"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "JUMPDEST"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ADD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "AND"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ADD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP3"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ADD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP3"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "JUMP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "JUMPDEST"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "MLOAD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP3"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ISZERO"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ISZERO"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ISZERO"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ISZERO"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "MSTORE"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "ADD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "MLOAD"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "DUP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SUB"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP1"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "RETURN"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "JUMPDEST"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "POP"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "JUMP"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "JUMPDEST"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "MLOAD"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "DUP1"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "DUP3"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "ISZERO"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "ISZERO"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "ISZERO"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "ISZERO"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "DUP2"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "MSTORE"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "ADD"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "SWAP2"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "POP"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "POP"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "MLOAD"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "DUP1"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "SWAP2"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "SUB"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "SWAP1"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "RETURN"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "JUMPDEST"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP2"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "ADD"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "AND"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "ADD"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP3"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP2"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "JUMP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "JUMPDEST"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "MLOAD"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP3"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP2"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "MSTORE"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "ADD"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP2"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "MLOAD"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "DUP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP2"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SUB"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "RETURN"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMPDEST"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMPDEST"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MLOAD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "ADD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP3"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SUB"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP3"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MSTORE"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP4"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MLOAD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MSTORE"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "ADD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MLOAD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "ADD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP4"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "ADD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "AND"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "ISZERO"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMPI"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP3"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SUB"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MLOAD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP4"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SUB"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "EXP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SUB"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "NOT"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "AND"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MSTORE"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "ADD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMPDEST"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP3"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "MLOAD"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "DUP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP2"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SUB"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "RETURN"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "JUMPDEST"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ADD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "AND"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ADD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP3"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ADD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP3"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "JUMP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "JUMPDEST"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "MLOAD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP3"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ISZERO"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ISZERO"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ISZERO"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ISZERO"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "MSTORE"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "ADD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "MLOAD"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "DUP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SUB"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP1"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "RETURN"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "JUMPDEST"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ADD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "AND"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ADD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP3"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ADD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP3"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "JUMP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "JUMPDEST"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "MLOAD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP3"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ISZERO"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ISZERO"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ISZERO"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ISZERO"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "MSTORE"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "ADD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "MLOAD"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "DUP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SUB"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP1"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "RETURN"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "JUMPDEST"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "ADD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "AND"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "ADD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP3"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "AND"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "ADD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP3"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "JUMP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "JUMPDEST"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "MLOAD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP3"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "MSTORE"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "ADD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "MLOAD"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "DUP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SUB"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP1"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "RETURN"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMPDEST"
										},
										{
											"begin": 5751,
											"end": 5764,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5783,
											"end": 5788,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SLOAD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ISZERO"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MUL"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SUB"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DIV"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DIV"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MUL"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MLOAD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP3"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP3"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SLOAD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ISZERO"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MUL"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SUB"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DIV"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ISZERO"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMPI"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "LT"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMPI"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP4"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SLOAD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DIV"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MUL"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP4"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMP"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMPDEST"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP3"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "KECCAK256"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMPDEST"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SLOAD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "MSTORE"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP4"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "GT"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMPI"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP3"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SUB"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "AND"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "DUP3"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "ADD"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP2"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "JUMPDEST"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "POP"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "POP"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "POP"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "POP"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "POP"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "SWAP1"
										},
										{
											"begin": 5776,
											"end": 5788,
											"name": "POP"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5795,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "JUMPDEST"
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 8001,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 7974,
											"end": 7984,
											"name": "CALLER"
										},
										{
											"begin": 7986,
											"end": 7993,
											"name": "DUP5"
										},
										{
											"begin": 7995,
											"end": 8000,
											"name": "DUP5"
										},
										{
											"begin": 7965,
											"end": 7973,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 7965,
											"end": 8001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7965,
											"end": 8001,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 7965,
											"end": 8001,
											"name": "JUMPDEST"
										},
										{
											"begin": 8018,
											"end": 8022,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8011,
											"end": 8022,
											"name": "SWAP1"
										},
										{
											"begin": 8011,
											"end": 8022,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP3"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "SWAP2"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "POP"
										},
										{
											"begin": 7884,
											"end": 8029,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "JUMPDEST"
										},
										{
											"begin": 6893,
											"end": 6900,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6931,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6919,
											"end": 6931,
											"name": "SLOAD"
										},
										{
											"begin": 6912,
											"end": 6931,
											"name": "SWAP1"
										},
										{
											"begin": 6912,
											"end": 6931,
											"name": "POP"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6849,
											"end": 6938,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "JUMPDEST"
										},
										{
											"begin": 8575,
											"end": 8579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8627,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP5"
										},
										{
											"begin": 8609,
											"end": 8618,
											"name": "DUP5"
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "DUP5"
										},
										{
											"begin": 8591,
											"end": 8600,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 8591,
											"end": 8627,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8591,
											"end": 8627,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8591,
											"end": 8627,
											"name": "JUMPDEST"
										},
										{
											"begin": 8637,
											"end": 8710,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "DUP5"
										},
										{
											"begin": 8654,
											"end": 8664,
											"name": "CALLER"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP6"
										},
										{
											"begin": 8666,
											"end": 8677,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8684,
											"name": "DUP11"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "AND"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "AND"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "DUP2"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "MSTORE"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "ADD"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "SWAP1"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "DUP2"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "MSTORE"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "ADD"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8685,
											"name": "KECCAK256"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8696,
											"name": "CALLER"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "AND"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "AND"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "DUP2"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "MSTORE"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "ADD"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "SWAP1"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "DUP2"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "MSTORE"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "ADD"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "KECCAK256"
										},
										{
											"begin": 8666,
											"end": 8697,
											"name": "SLOAD"
										},
										{
											"begin": 8666,
											"end": 8701,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8666,
											"end": 8701,
											"name": "SWAP1"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "SWAP2"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "SWAP1"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "AND"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8666,
											"end": 8709,
											"name": "JUMPDEST"
										},
										{
											"begin": 8637,
											"end": 8645,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8637,
											"end": 8710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8637,
											"end": 8710,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8637,
											"end": 8710,
											"name": "JUMPDEST"
										},
										{
											"begin": 8727,
											"end": 8731,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8720,
											"end": 8731,
											"name": "SWAP1"
										},
										{
											"begin": 8720,
											"end": 8731,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP4"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "SWAP3"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "POP"
										},
										{
											"begin": 8486,
											"end": 8738,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "JUMPDEST"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "SWAP1"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "SLOAD"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "SWAP1"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "EXP"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "SWAP1"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DIV"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "AND"
										},
										{
											"begin": 6606,
											"end": 6622,
											"name": "SWAP1"
										},
										{
											"begin": 6606,
											"end": 6622,
											"name": "POP"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "SWAP1"
										},
										{
											"begin": 6548,
											"end": 6629,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "JUMPDEST"
										},
										{
											"begin": 9213,
											"end": 9217,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9229,
											"end": 9308,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 9238,
											"end": 9248,
											"name": "CALLER"
										},
										{
											"begin": 9250,
											"end": 9257,
											"name": "DUP5"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 9296,
											"end": 9306,
											"name": "DUP6"
										},
										{
											"begin": 9259,
											"end": 9270,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9271,
											"end": 9281,
											"name": "CALLER"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "AND"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "AND"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "DUP2"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "MSTORE"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "ADD"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "SWAP1"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "DUP2"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "MSTORE"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "ADD"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9282,
											"name": "KECCAK256"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9290,
											"name": "DUP10"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "AND"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "AND"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "DUP2"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "MSTORE"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "ADD"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "SWAP1"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "DUP2"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "MSTORE"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "ADD"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "KECCAK256"
										},
										{
											"begin": 9259,
											"end": 9291,
											"name": "SLOAD"
										},
										{
											"begin": 9259,
											"end": 9295,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 9259,
											"end": 9295,
											"name": "SWAP1"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "SWAP2"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "SWAP1"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "AND"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 9259,
											"end": 9307,
											"name": "JUMPDEST"
										},
										{
											"begin": 9229,
											"end": 9237,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 9229,
											"end": 9308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9229,
											"end": 9308,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 9229,
											"end": 9308,
											"name": "JUMPDEST"
										},
										{
											"begin": 9325,
											"end": 9329,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9318,
											"end": 9329,
											"name": "SWAP1"
										},
										{
											"begin": 9318,
											"end": 9329,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP3"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "SWAP2"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "POP"
										},
										{
											"begin": 9133,
											"end": 9336,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "JUMPDEST"
										},
										{
											"begin": 7502,
											"end": 7506,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7528,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 7517,
											"end": 7526,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 7517,
											"end": 7528,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7517,
											"end": 7528,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7517,
											"end": 7528,
											"name": "JUMPDEST"
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7538,
											"end": 7549,
											"name": "SWAP1"
										},
										{
											"begin": 7538,
											"end": 7549,
											"name": "POP"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "SWAP1"
										},
										{
											"begin": 7466,
											"end": 7556,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "JUMPDEST"
										},
										{
											"begin": 7053,
											"end": 7060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7088,
											"name": "DUP1"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7096,
											"name": "DUP4"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "AND"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "AND"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "DUP2"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "MSTORE"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "ADD"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "SWAP1"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "DUP2"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "MSTORE"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "ADD"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "KECCAK256"
										},
										{
											"begin": 7079,
											"end": 7097,
											"name": "SLOAD"
										},
										{
											"begin": 7072,
											"end": 7097,
											"name": "SWAP1"
										},
										{
											"begin": 7072,
											"end": 7097,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP2"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "SWAP1"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "POP"
										},
										{
											"begin": 6996,
											"end": 7104,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMPDEST"
										},
										{
											"begin": 5947,
											"end": 5960,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ISZERO"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MUL"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SUB"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DIV"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DIV"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MUL"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MLOAD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP3"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP3"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ISZERO"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MUL"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SUB"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DIV"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ISZERO"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMPI"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "LT"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMPI"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DIV"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MUL"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMP"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMPDEST"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP3"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "KECCAK256"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMPDEST"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SLOAD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "MSTORE"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP4"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "GT"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMPI"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP3"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SUB"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "AND"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "DUP3"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "ADD"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP2"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "JUMPDEST"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "POP"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "SWAP1"
										},
										{
											"begin": 5972,
											"end": 5986,
											"name": "POP"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "SWAP1"
										},
										{
											"begin": 5908,
											"end": 5993,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "JUMPDEST"
										},
										{
											"begin": 9908,
											"end": 9912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9924,
											"end": 10008,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 9933,
											"end": 9943,
											"name": "CALLER"
										},
										{
											"begin": 9945,
											"end": 9952,
											"name": "DUP5"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 9991,
											"end": 10006,
											"name": "DUP6"
										},
										{
											"begin": 9954,
											"end": 9965,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9966,
											"end": 9976,
											"name": "CALLER"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "AND"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "AND"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9954,
											"end": 9977,
											"name": "KECCAK256"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9978,
											"end": 9985,
											"name": "DUP10"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "AND"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "AND"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "DUP2"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "MSTORE"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "ADD"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "KECCAK256"
										},
										{
											"begin": 9954,
											"end": 9986,
											"name": "SLOAD"
										},
										{
											"begin": 9954,
											"end": 9990,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9954,
											"end": 9990,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "SWAP2"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "SWAP1"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "AND"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 9954,
											"end": 10007,
											"name": "JUMPDEST"
										},
										{
											"begin": 9924,
											"end": 9932,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 9924,
											"end": 10008,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9924,
											"end": 10008,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 9924,
											"end": 10008,
											"name": "JUMPDEST"
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10018,
											"end": 10029,
											"name": "SWAP1"
										},
										{
											"begin": 10018,
											"end": 10029,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP3"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "SWAP2"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "POP"
										},
										{
											"begin": 9823,
											"end": 10036,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "JUMPDEST"
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7432,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 7402,
											"end": 7412,
											"name": "CALLER"
										},
										{
											"begin": 7414,
											"end": 7423,
											"name": "DUP5"
										},
										{
											"begin": 7425,
											"end": 7431,
											"name": "DUP5"
										},
										{
											"begin": 7392,
											"end": 7401,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 7392,
											"end": 7432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7392,
											"end": 7432,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 7392,
											"end": 7432,
											"name": "JUMPDEST"
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7442,
											"end": 7453,
											"name": "SWAP1"
										},
										{
											"begin": 7442,
											"end": 7453,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP3"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "SWAP2"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "POP"
										},
										{
											"begin": 7307,
											"end": 7460,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "JUMPDEST"
										},
										{
											"begin": 7686,
											"end": 7693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7723,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7729,
											"name": "DUP5"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "AND"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "AND"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "DUP2"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "MSTORE"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "ADD"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "SWAP1"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "DUP2"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "MSTORE"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "ADD"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "KECCAK256"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7738,
											"name": "DUP4"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "AND"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "AND"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "DUP2"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "MSTORE"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "ADD"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "SWAP1"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "DUP2"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "MSTORE"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "ADD"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "KECCAK256"
										},
										{
											"begin": 7712,
											"end": 7739,
											"name": "SLOAD"
										},
										{
											"begin": 7705,
											"end": 7739,
											"name": "SWAP1"
										},
										{
											"begin": 7705,
											"end": 7739,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP3"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "SWAP2"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "POP"
										},
										{
											"begin": 7614,
											"end": 7746,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12772,
											"end": 13101,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 12772,
											"end": 13101,
											"name": "JUMPDEST"
										},
										{
											"begin": 12881,
											"end": 12882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "AND"
										},
										{
											"begin": 12864,
											"end": 12869,
											"name": "DUP4"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "AND"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "EQ"
										},
										{
											"begin": 12864,
											"end": 12883,
											"name": "ISZERO"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ISZERO"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ISZERO"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "JUMPI"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MLOAD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MSTORE"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ADD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP1"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP1"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ADD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP3"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "SUB"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP3"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MSTORE"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MSTORE"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ADD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP1"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MSTORE"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ADD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MSTORE"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "POP"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "ADD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "SWAP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "POP"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "POP"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "MLOAD"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "DUP1"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "SWAP2"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "SUB"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "SWAP1"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "REVERT"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 12856,
											"end": 12924,
											"name": "JUMPDEST"
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "AND"
										},
										{
											"begin": 12942,
											"end": 12949,
											"name": "DUP3"
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "AND"
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "EQ"
										},
										{
											"begin": 12942,
											"end": 12963,
											"name": "ISZERO"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ISZERO"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ISZERO"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "JUMPI"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MLOAD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MSTORE"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ADD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP1"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP1"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ADD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP3"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "SUB"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP3"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MSTORE"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MSTORE"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ADD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP1"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MSTORE"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ADD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MSTORE"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "POP"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "ADD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "SWAP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "POP"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "POP"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "MLOAD"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "DUP1"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "SWAP2"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "SUB"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "SWAP1"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "REVERT"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 12934,
											"end": 13002,
											"name": "JUMPDEST"
										},
										{
											"begin": 13043,
											"end": 13048,
											"name": "DUP1"
										},
										{
											"begin": 13013,
											"end": 13024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13025,
											"end": 13030,
											"name": "DUP6"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "AND"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "AND"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "DUP2"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "MSTORE"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "ADD"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "SWAP1"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "DUP2"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "MSTORE"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "ADD"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13013,
											"end": 13031,
											"name": "KECCAK256"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13032,
											"end": 13039,
											"name": "DUP5"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "AND"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "AND"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "DUP2"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "MSTORE"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "ADD"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "SWAP1"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "DUP2"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "MSTORE"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "ADD"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13013,
											"end": 13040,
											"name": "KECCAK256"
										},
										{
											"begin": 13013,
											"end": 13048,
											"name": "DUP2"
										},
										{
											"begin": 13013,
											"end": 13048,
											"name": "SWAP1"
										},
										{
											"begin": 13013,
											"end": 13048,
											"name": "SSTORE"
										},
										{
											"begin": 13013,
											"end": 13048,
											"name": "POP"
										},
										{
											"begin": 13079,
											"end": 13086,
											"name": "DUP2"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "AND"
										},
										{
											"begin": 13072,
											"end": 13077,
											"name": "DUP4"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "AND"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13088,
											"end": 13093,
											"name": "DUP4"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "MLOAD"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "DUP1"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "DUP3"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "DUP2"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "MSTORE"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "ADD"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "SWAP2"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "POP"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "POP"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "MLOAD"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "DUP1"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "SWAP2"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "SUB"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "SWAP1"
										},
										{
											"begin": 13063,
											"end": 13094,
											"name": "LOG3"
										},
										{
											"begin": 12772,
											"end": 13101,
											"name": "POP"
										},
										{
											"begin": 12772,
											"end": 13101,
											"name": "POP"
										},
										{
											"begin": 12772,
											"end": 13101,
											"name": "POP"
										},
										{
											"begin": 12772,
											"end": 13101,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10510,
											"end": 11001,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 10510,
											"end": 11001,
											"name": "JUMPDEST"
										},
										{
											"begin": 10625,
											"end": 10626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "AND"
										},
										{
											"begin": 10607,
											"end": 10613,
											"name": "DUP4"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "AND"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "EQ"
										},
										{
											"begin": 10607,
											"end": 10627,
											"name": "ISZERO"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ISZERO"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ISZERO"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "JUMPI"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MLOAD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MSTORE"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ADD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP1"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP1"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ADD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP3"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "SUB"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP3"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MSTORE"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MSTORE"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ADD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP1"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MSTORE"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ADD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MSTORE"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "POP"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "ADD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "SWAP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "POP"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "POP"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "MLOAD"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "DUP1"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "SWAP2"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "SUB"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "SWAP1"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "REVERT"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 10599,
											"end": 10669,
											"name": "JUMPDEST"
										},
										{
											"begin": 10708,
											"end": 10709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "AND"
										},
										{
											"begin": 10687,
											"end": 10696,
											"name": "DUP3"
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "AND"
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "EQ"
										},
										{
											"begin": 10687,
											"end": 10710,
											"name": "ISZERO"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ISZERO"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ISZERO"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "JUMPI"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MLOAD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MSTORE"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ADD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP1"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP1"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ADD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP3"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "SUB"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP3"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MSTORE"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MSTORE"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ADD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP1"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MSTORE"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ADD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MSTORE"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "ADD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "SWAP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "POP"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "MLOAD"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "DUP1"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "SWAP2"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "SUB"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "SWAP1"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "REVERT"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 10679,
											"end": 10750,
											"name": "JUMPDEST"
										},
										{
											"begin": 10782,
											"end": 10788,
											"name": "DUP3"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "AND"
										},
										{
											"begin": 10768,
											"end": 10778,
											"name": "CALLER"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "AND"
										},
										{
											"begin": 10768,
											"end": 10788,
											"name": "EQ"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "ISZERO"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "ISZERO"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "JUMPI"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "MLOAD"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP2"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "MSTORE"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "ADD"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP1"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP1"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "ADD"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP3"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP2"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "SUB"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP3"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "MSTORE"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP2"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "MSTORE"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "ADD"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP1"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "45524332303A2043616C6C65722069736E27742073656E646572000000000000"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP2"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "MSTORE"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "POP"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "ADD"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "SWAP2"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "POP"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "POP"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "MLOAD"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "DUP1"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "SWAP2"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "SUB"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "SWAP1"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "REVERT"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 10760,
											"end": 10819,
											"name": "JUMPDEST"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10872,
											"end": 10878,
											"name": "DUP2"
										},
										{
											"begin": 10850,
											"end": 10859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "DUP1"
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP7"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "DUP2"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "MSTORE"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "ADD"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "SWAP1"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "DUP2"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "MSTORE"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "ADD"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "KECCAK256"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "SLOAD"
										},
										{
											"begin": 10850,
											"end": 10871,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 10850,
											"end": 10871,
											"name": "SWAP1"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "SWAP2"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "SWAP1"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "AND"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10850,
											"end": 10879,
											"name": "JUMPDEST"
										},
										{
											"begin": 10830,
											"end": 10839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "DUP1"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP6"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "AND"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "AND"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "DUP2"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "MSTORE"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "ADD"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "SWAP1"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "DUP2"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "MSTORE"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "ADD"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10847,
											"name": "KECCAK256"
										},
										{
											"begin": 10830,
											"end": 10879,
											"name": "DUP2"
										},
										{
											"begin": 10830,
											"end": 10879,
											"name": "SWAP1"
										},
										{
											"begin": 10830,
											"end": 10879,
											"name": "SSTORE"
										},
										{
											"begin": 10830,
											"end": 10879,
											"name": "POP"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 10937,
											"end": 10943,
											"name": "DUP2"
										},
										{
											"begin": 10912,
											"end": 10921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "DUP1"
										},
										{
											"begin": 10922,
											"end": 10931,
											"name": "DUP6"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "AND"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "AND"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "DUP2"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "MSTORE"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "ADD"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "SWAP1"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "DUP2"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "MSTORE"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "ADD"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "KECCAK256"
										},
										{
											"begin": 10912,
											"end": 10932,
											"name": "SLOAD"
										},
										{
											"begin": 10912,
											"end": 10936,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 10912,
											"end": 10936,
											"name": "SWAP1"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "SWAP2"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "SWAP1"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "AND"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 10912,
											"end": 10944,
											"name": "JUMPDEST"
										},
										{
											"begin": 10889,
											"end": 10898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "DUP1"
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "DUP5"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "AND"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "AND"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "DUP2"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "MSTORE"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "ADD"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "SWAP1"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "DUP2"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "MSTORE"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "ADD"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "KECCAK256"
										},
										{
											"begin": 10889,
											"end": 10944,
											"name": "DUP2"
										},
										{
											"begin": 10889,
											"end": 10944,
											"name": "SWAP1"
										},
										{
											"begin": 10889,
											"end": 10944,
											"name": "SSTORE"
										},
										{
											"begin": 10889,
											"end": 10944,
											"name": "POP"
										},
										{
											"begin": 10976,
											"end": 10985,
											"name": "DUP2"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "AND"
										},
										{
											"begin": 10968,
											"end": 10974,
											"name": "DUP4"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "AND"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10987,
											"end": 10993,
											"name": "DUP4"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "MLOAD"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "DUP1"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "DUP3"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "DUP2"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "MSTORE"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "ADD"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "SWAP2"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "POP"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "POP"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "MLOAD"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "DUP1"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "SWAP2"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "SUB"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "SWAP1"
										},
										{
											"begin": 10959,
											"end": 10994,
											"name": "LOG3"
										},
										{
											"begin": 10510,
											"end": 11001,
											"name": "POP"
										},
										{
											"begin": 10510,
											"end": 11001,
											"name": "POP"
										},
										{
											"begin": 10510,
											"end": 11001,
											"name": "POP"
										},
										{
											"begin": 10510,
											"end": 11001,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "JUMPDEST"
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP3"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP3"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "GT"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "ISZERO"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "ISZERO"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "ISZERO"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "JUMPI"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP3"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP3"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP2"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "MSTORE"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "ADD"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "POP"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "MLOAD"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "DUP1"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "SWAP2"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "SUB"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "SWAP1"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "REVERT"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 1661,
											"end": 1710,
											"name": "JUMPDEST"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "DUP3"
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "DUP5"
										},
										{
											"begin": 1732,
											"end": 1737,
											"name": "SUB"
										},
										{
											"begin": 1720,
											"end": 1737,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1737,
											"name": "POP"
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP1"
										},
										{
											"begin": 1748,
											"end": 1756,
											"name": "SWAP2"
										},
										{
											"begin": 1748,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1748,
											"end": 1756,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "SWAP3"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1763,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "JUMPDEST"
										},
										{
											"begin": 1202,
											"end": 1209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP1"
										},
										{
											"begin": 1237,
											"end": 1238,
											"name": "DUP3"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP5"
										},
										{
											"begin": 1233,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1221,
											"end": 1238,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1238,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "DUP4"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP2"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "LT"
										},
										{
											"begin": 1256,
											"end": 1262,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "JUMPI"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP3"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "SUB"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP3"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "MSTORE"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "SWAP2"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "SWAP2"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "SUB"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "REVERT"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 1248,
											"end": 1294,
											"name": "JUMPDEST"
										},
										{
											"begin": 1312,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1305,
											"end": 1313,
											"name": "SWAP2"
										},
										{
											"begin": 1305,
											"end": 1313,
											"name": "POP"
										},
										{
											"begin": 1305,
											"end": 1313,
											"name": "POP"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "SWAP3"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "SWAP2"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1144,
											"end": 1320,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12192,
											"end": 12346,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 12192,
											"end": 12346,
											"name": "JUMPDEST"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "SLOAD"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "EXP"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "SWAP1"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "DIV"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12254,
											"end": 12260,
											"name": "AND"
										},
										{
											"begin": 12240,
											"end": 12260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12240,
											"end": 12260,
											"name": "AND"
										},
										{
											"begin": 12240,
											"end": 12250,
											"name": "CALLER"
										},
										{
											"begin": 12240,
											"end": 12260,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12240,
											"end": 12260,
											"name": "AND"
										},
										{
											"begin": 12240,
											"end": 12260,
											"name": "EQ"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ISZERO"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ISZERO"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "JUMPI"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MLOAD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MSTORE"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ADD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP1"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP1"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ADD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP3"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "SUB"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP3"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MSTORE"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MSTORE"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ADD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP1"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "45524332303A2043616E27742064657374726F792063616C6C65722069736E27"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MSTORE"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ADD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "74206F776E65722E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MSTORE"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "ADD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "SWAP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "POP"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "MLOAD"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "DUP1"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "SWAP2"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "SUB"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "SWAP1"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "REVERT"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 12232,
											"end": 12305,
											"name": "JUMPDEST"
										},
										{
											"begin": 12328,
											"end": 12338,
											"name": "CALLER"
										},
										{
											"begin": 12315,
											"end": 12339,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12315,
											"end": 12339,
											"name": "AND"
										},
										{
											"begin": 12315,
											"end": 12339,
											"name": "SELFDESTRUCT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"finalize()": "4bb278f3",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC20` interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using `_mint`. For a generic mechanism see `ERC20Mintable`. * *For a detailed writeup see our guide [How to implement supply mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).* * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an `Approval` event is emitted on calls to `transferFrom`. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard `decreaseAllowance` and `increaseAllowance` functions have been added to mitigate the well-known issues around setting allowances. See `IERC20.approve`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MetaCoin.sol\":\"MetaCoin\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MetaCoin.sol\":{\"keccak256\":\"0x71d2cd05c23793f6843476f7e875b525cf18b062f0d8142af7f29161f363d2d5\",\"urls\":[\"bzzr://230a86d3d8a2cfce98f03a6b7f1840a75c0d5605a8a81dd0155cfe325e70325c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/MetaCoin.sol\":899:3837  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MetaCoin.sol\":899:3837  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820596f1f5adf326562b5f3a47c7c22f3f4a9d8c97b7d4e8493294d04d62c93013e0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820596f1f5adf326562b5f3a47c7c22f3f4a9d8c97b7d4e8493294d04d62c93013e0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 MSIZE PUSH16 0x1F5ADF326562B5F3A47C7C22F3F4A9D8 0xc9 PUSH28 0x7D4E8493294D04D62C93013E00290000000000000000000000000000 ",
							"sourceMap": "899:2938:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820596f1f5adf326562b5f3a47c7c22f3f4a9d8c97b7d4e8493294d04d62c93013e0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 MSIZE PUSH16 0x1F5ADF326562B5F3A47C7C22F3F4A9D8 0xc9 PUSH28 0x7D4E8493294D04D62C93013E00290000000000000000000000000000 ",
							"sourceMap": "899:2938:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 899,
									"end": 3837,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 899,
									"end": 3837,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820596f1f5adf326562b5f3a47c7c22f3f4a9d8c97b7d4e8493294d04d62c93013e0029",
									".code": [
										{
											"begin": 899,
											"end": 3837,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "ADDRESS"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "EQ"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "MSTORE"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 3837,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MetaCoin.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MetaCoin.sol\":{\"keccak256\":\"0x71d2cd05c23793f6843476f7e875b525cf18b062f0d8142af7f29161f363d2d5\",\"urls\":[\"bzzr://230a86d3d8a2cfce98f03a6b7f1840a75c0d5605a8a81dd0155cfe325e70325c\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/MetaCoin.sol": {
				"ast": {
					"absolutePath": "contracts/MetaCoin.sol",
					"exportedSymbols": {
						"IERC20": [
							73
						],
						"MetaCoin": [
							695
						],
						"SafeMath": [
							204
						]
					},
					"id": 696,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "245:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "244:9:0"
									},
									"scope": 73,
									"src": "199:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "278:17:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "319:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:9:0"
									},
									"scope": 73,
									"src": "260:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "352:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "371:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:35:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "405:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "404:6:0"
									},
									"scope": 73,
									"src": "334:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "436:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "451:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "435:32:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "491:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "490:9:0"
									},
									"scope": 73,
									"src": "417:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "540:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "522:33:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "574:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "574:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "573:6:0"
									},
									"scope": 73,
									"src": "506:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "608:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "624:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "643:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "607:51:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "677:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "676:6:0"
									},
									"scope": 73,
									"src": "586:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "727:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 53,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "726:6:0"
									},
									"scope": 73,
									"src": "689:44:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 64,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "754:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "776:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "753:57:0"
									},
									"src": "739:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 72,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "832:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "855:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "880:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:63:0"
									},
									"src": "817:78:0"
								}
							],
							"scope": 696,
							"src": "176:721:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1211:109:0",
										"statements": [
											{
												"assignments": [
													83
												],
												"declarations": [
													{
														"constant": false,
														"id": 83,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "1221:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 82,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "1233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 85,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1237:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1221:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1256:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1261:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1256:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1264:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "1248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1248:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 83,
													"src": "1312:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 96,
												"nodeType": "Return",
												"src": "1305:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1157:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1168:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1156:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1202:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1201:9:0"
									},
									"scope": 204,
									"src": "1144:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1651:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1669:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "1661:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1661:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1661:49:0"
											},
											{
												"assignments": [
													115
												],
												"declarations": [
													{
														"constant": false,
														"id": 115,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "1720:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1720:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 116,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1736:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1720:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 120,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 115,
													"src": "1755:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 106,
												"id": 121,
												"nodeType": "Return",
												"src": "1748:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1597:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1608:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1596:22:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1642:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1641:9:0"
									},
									"scope": 204,
									"src": "1584:179:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2070:391:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2301:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2306:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 138,
												"nodeType": "IfStatement",
												"src": "2297:45:0",
												"trueBody": {
													"id": 137,
													"nodeType": "Block",
													"src": "2309:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2330:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 131,
															"id": 136,
															"nodeType": "Return",
															"src": "2323:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "2352:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 141,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2364:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 142,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "2368:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2364:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2352:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 146,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "2387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 147,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "2391:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2387:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2396:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2387:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2399:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "2379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "2379:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2453:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 155,
												"nodeType": "Return",
												"src": "2446:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2016:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2027:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2015:22:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2061:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2060:9:0"
									},
									"scope": 204,
									"src": "2003:458:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "2983:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "3067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3071:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3067:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3074:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "3059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "3059:44:0"
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "3113:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "3129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3125:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3113:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 179,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 174,
													"src": "3234:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 165,
												"id": 180,
												"nodeType": "Return",
												"src": "3227:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2929:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2940:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2928:22:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "2974:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2973:9:0"
									},
									"scope": 204,
									"src": "2916:326:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3753:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "3771:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3776:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3771:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3779:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "3763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3763:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "3827:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3823:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "3816:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3699:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3710:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3698:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3744:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3743:9:0"
									},
									"scope": 204,
									"src": "3686:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 696,
							"src": "899:2938:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 205,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 73,
										"src": "5009:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$73",
											"typeString": "contract IERC20"
										}
									},
									"id": 206,
									"nodeType": "InheritanceSpecifier",
									"src": "5009:6:0"
								}
							],
							"contractDependencies": [
								73
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IERC20` interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using `_mint`.\nFor a generic mechanism see `ERC20Mintable`.\n * *For a detailed writeup see our guide [How to implement supply\nmechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See `IERC20.approve`.",
							"fullyImplemented": true,
							"id": 695,
							"linearizedBaseContracts": [
								695,
								73
							],
							"name": "MetaCoin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 209,
									"libraryName": {
										"contractScope": null,
										"id": 207,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 204,
										"src": "5028:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$204",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "5022:27:0",
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5041:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 213,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "5055:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 212,
										"keyType": {
											"id": 210,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5064:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5055:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 211,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5075:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 219,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "5108:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 218,
										"keyType": {
											"id": 214,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5117:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5108:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 217,
											"keyType": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5137:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5128:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 216,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5148:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 221,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "5311:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 220,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5311:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 223,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "5337:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 222,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5337:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 225,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "5365:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 224,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5365:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 227,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "5394:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 226,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5394:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "5445:204:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 230,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "5455:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "6f72616e6765436f696e",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5463:12:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_4adba95e7db5e44f790a9223d4c59e0f4dbccd5916f6008494abd1e0dd7d4f12",
															"typeString": "literal_string \"orangeCoin\""
														},
														"value": "orangeCoin"
													},
													"src": "5455:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "5455:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 234,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "5485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4f524e",
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5495:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_ffb3648de00ff7541533228cb1064572bbd5bf76630cc1e207603d16a77fdf40",
															"typeString": "literal_string \"ORN\""
														},
														"value": "ORN"
													},
													"src": "5485:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "5485:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 238,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "5510:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5522:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5510:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "5510:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 242,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "5533:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 243,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "5542:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5542:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5533:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "5533:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307836324239613246343237416538363439623234363765303830393543363535353131343039323664",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x62B9a2F427Ae8649b2467e08095C65551140926d"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_10000000_by_1",
																"typeString": "int_const 10000000"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "313030303030",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5613:6:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5622:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5628:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "5613:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000_by_1",
																"typeString": "int_const 10000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_rational_10000000_by_1",
																"typeString": "int_const 10000000"
															}
														],
														"id": 247,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "5563:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5563:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "5563:67:0"
											}
										]
									},
									"documentation": null,
									"id": 257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5435:2:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5445:0:0"
									},
									"scope": 695,
									"src": "5423:226:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "5766:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 262,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 221,
													"src": "5783:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "5776:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5727:2:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5751:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5751:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5750:15:0"
									},
									"scope": 695,
									"src": "5714:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "5962:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 270,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "5979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 269,
												"id": 271,
												"nodeType": "Return",
												"src": "5972:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5923:2:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5947:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5947:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5946:15:0"
									},
									"scope": 695,
									"src": "5908:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "6596:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 278,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 225,
													"src": "6613:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 277,
												"id": 279,
												"nodeType": "Return",
												"src": "6606:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6565:2:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "6589:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 275,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6589:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6588:7:0"
									},
									"scope": 695,
									"src": "6548:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 283,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "6760:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 282,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6760:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "6902:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 288,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "6919:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 287,
												"id": 289,
												"nodeType": "Return",
												"src": "6912:19:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.totalSupply`.",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6869:2:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "6893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6892:9:0"
									},
									"scope": 695,
									"src": "6849:89:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "7062:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 298,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "7079:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 300,
													"indexExpression": {
														"argumentTypes": null,
														"id": 299,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7079:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 297,
												"id": 301,
												"nodeType": "Return",
												"src": "7072:25:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.balanceOf`.",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "7015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7014:17:0"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "7053:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7052:9:0"
									},
									"scope": 695,
									"src": "6996:108:0",
									"stateMutability": "view",
									"superFunction": 13,
									"visibility": "public"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "7382:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7402:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7402:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 315,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "7414:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 316,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "7425:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 312,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "7392:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7392:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "7392:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7449:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 311,
												"id": 320,
												"nodeType": "Return",
												"src": "7442:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7325:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7344:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7324:35:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7375:6:0"
									},
									"scope": 695,
									"src": "7307:153:0",
									"stateMutability": "nonpayable",
									"superFunction": 22,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "7507:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 327,
														"name": "_finalize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "7517:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7517:11:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7545:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 326,
												"id": 331,
												"nodeType": "Return",
												"src": "7538:11:0"
											}
										]
									},
									"documentation": null,
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7483:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7502:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7501:6:0"
									},
									"scope": 695,
									"src": "7466:90:0",
									"stateMutability": "nonpayable",
									"superFunction": 56,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "7695:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 342,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7712:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 344,
														"indexExpression": {
															"argumentTypes": null,
															"id": 343,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "7724:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7712:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 346,
													"indexExpression": {
														"argumentTypes": null,
														"id": 345,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "7731:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7712:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 347,
												"nodeType": "Return",
												"src": "7705:34:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.allowance`.",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "7633:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "7648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7632:32:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "7686:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7685:9:0"
									},
									"scope": 695,
									"src": "7614:132:0",
									"stateMutability": "view",
									"superFunction": 31,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "7955:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7974:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7974:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 361,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "7986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 362,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "7995:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "7965:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7965:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "7965:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8018:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 357,
												"id": 366,
												"nodeType": "Return",
												"src": "8011:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "7901:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "7918:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7900:32:0"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "7949:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7948:6:0"
									},
									"scope": 695,
									"src": "7884:145:0",
									"stateMutability": "nonpayable",
									"superFunction": 40,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8581:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 380,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "8601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 381,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "8609:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 382,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "8620:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 379,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "8591:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8591:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8591:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 386,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "8646:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "8654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 396,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "8702:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 389,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "8666:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 391,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 390,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "8678:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8666:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 394,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 392,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8686:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8686:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8666:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "8666:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8666:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "8637:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8637:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "8637:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8727:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 378,
												"id": 401,
												"nodeType": "Return",
												"src": "8720:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of `ERC20`;\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8508:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8524:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8543:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8507:51:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8575:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8574:6:0"
									},
									"scope": 695,
									"src": "8486:252:0",
									"stateMutability": "nonpayable",
									"superFunction": 51,
									"visibility": "public"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "9219:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 413,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "9238:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9238:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9250:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 423,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9296:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 416,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "9259:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 419,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 417,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "9271:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9271:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9259:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 421,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 420,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "9283:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9259:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 98,
																"src": "9259:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9259:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9229:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9229:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "9229:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9325:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 411,
												"id": 428,
												"nodeType": "Return",
												"src": "9318:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9177:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9159:37:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "9213:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9212:6:0"
									},
									"scope": 695,
									"src": "9133:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "9914:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 440,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "9933:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9933:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 442,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9945:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 450,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "9991:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 443,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "9954:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 446,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 444,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "9966:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9966:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9954:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 448,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 447,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "9978:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9954:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "9954:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9954:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9924:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9924:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "9924:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10025:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 438,
												"id": 455,
												"nodeType": "Return",
												"src": "10018:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "9850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "9867:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9849:42:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "9908:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9907:6:0"
									},
									"scope": 695,
									"src": "9823:213:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "10589:412:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 467,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "10607:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10625:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10607:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10629:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 466,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "10599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10599:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "10599:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 476,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "10687:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10708:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10700:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10687:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10712:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "10679:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10679:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "10679:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "10768:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10768:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 487,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "10782:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10768:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a2043616c6c65722069736e27742073656e646572",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10790:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_622471a55c82e18728465eabe7e76c454204b0e7f912f1575249b3b45d65c119",
																"typeString": "literal_string \"ERC20: Caller isn't sender\""
															},
															"value": "ERC20: Caller isn't sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_622471a55c82e18728465eabe7e76c454204b0e7f912f1575249b3b45d65c119",
																"typeString": "literal_string \"ERC20: Caller isn't sender\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "10760:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10760:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "10760:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 492,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "10830:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 494,
														"indexExpression": {
															"argumentTypes": null,
															"id": 493,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "10840:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10830:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 499,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "10872:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 495,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "10850:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 497,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 496,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "10860:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10850:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "10850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10850:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10830:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "10830:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 503,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "10889:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 505,
														"indexExpression": {
															"argumentTypes": null,
															"id": 504,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "10899:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10889:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "10937:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 506,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "10912:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 508,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 507,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "10922:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10912:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 98,
															"src": "10912:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10912:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10889:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "10889:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 515,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "10968:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 516,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "10976:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "10987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "10959:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10959:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "EmitStatement",
												"src": "10954:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10529:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10545:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10528:51:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10589:0:0"
									},
									"scope": 695,
									"src": "10510:491:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "11328:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 529,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "11346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11365:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11357:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11357:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11346:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11369:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "11338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11338:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "11338:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 537,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "11414:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 540,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "11446:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 538,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "11429:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 98,
															"src": "11429:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11429:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11414:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "11414:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 544,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "11463:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 546,
														"indexExpression": {
															"argumentTypes": null,
															"id": 545,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11463:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "11507:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "11484:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 548,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "11494:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11484:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 98,
															"src": "11484:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11484:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11463:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "11463:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11546:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11538:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11538:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 559,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 560,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11559:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "11529:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11529:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "EmitStatement",
												"src": "11524:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "11286:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "11303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11285:33:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11328:0:0"
									},
									"scope": 695,
									"src": "11271:302:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "11949:237:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 572,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "11967:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11986:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11978:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11978:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11967:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11990:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "11959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11959:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "11959:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 580,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "12030:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 582,
														"indexExpression": {
															"argumentTypes": null,
															"id": 581,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12030:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 587,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "12074:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 583,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "12051:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 585,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 584,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "12061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12051:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "12051:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12051:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12030:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "12030:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 591,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "12090:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 594,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "12122:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 592,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "12105:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "12105:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12105:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12090:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "12090:38:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 599,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12169:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12161:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12161:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 598,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "12143:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12143:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "EmitStatement",
												"src": "12138:41:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "11908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "11925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11907:32:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11949:0:0"
									},
									"scope": 695,
									"src": "11893:293:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "12222:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "12240:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12240:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 613,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "12254:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12240:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a2043616e27742064657374726f792063616c6c65722069736e2774206f776e65722e",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12262:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a67153c4887b58ab333c2c1a45d300b0b14d640c78a6f69303bcb4cdd31bf7f5",
																"typeString": "literal_string \"ERC20: Can't destroy caller isn't owner.\""
															},
															"value": "ERC20: Can't destroy caller isn't owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a67153c4887b58ab333c2c1a45d300b0b14d640c78a6f69303bcb4cdd31bf7f5",
																"typeString": "literal_string \"ERC20: Can't destroy caller isn't owner.\""
															}
														],
														"id": 610,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "12232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12232:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "12232:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 619,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "12328:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 618,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "12315:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12315:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "12315:24:0"
											}
										]
									},
									"documentation": null,
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_finalize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12210:2:0"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12222:0:0"
									},
									"scope": 695,
									"src": "12192:154:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "12846:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 634,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "12864:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12881:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12873:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12873:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12864:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12885:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "12856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12856:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "12856:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 643,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "12942:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12961:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12953:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "12942:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12965:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															713,
															714
														],
														"referencedDeclaration": 714,
														"src": "12934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12934:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "12934:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 651,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "13013:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 654,
															"indexExpression": {
																"argumentTypes": null,
																"id": 652,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "13025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13013:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 655,
														"indexExpression": {
															"argumentTypes": null,
															"id": 653,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "13032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13013:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 656,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "13043:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13013:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "13013:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 660,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "13072:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 661,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "13079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 662,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "13088:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "13063:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13063:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "EmitStatement",
												"src": "13058:36:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "12790:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "12805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "12822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12789:47:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12846:0:0"
									},
									"scope": 695,
									"src": "12772:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "13339:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 674,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "13355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "13364:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 673,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "13349:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13349:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "13349:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 679,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "13390:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 680,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "13399:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13399:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 689,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "13448:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 682,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "13411:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 684,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 683,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "13423:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13411:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 687,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 685,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "13432:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13432:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13411:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "13411:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13411:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "13381:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13381:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "13381:75:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "13297:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "13314:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13296:33:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13339:0:0"
									},
									"scope": 695,
									"src": "13278:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 696,
							"src": "4988:8477:0"
						}
					],
					"src": "0:13467:0"
				},
				"id": 0
			}
		}
	}
}